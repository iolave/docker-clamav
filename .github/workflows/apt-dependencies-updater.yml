name: APT dependencies updater

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

    
jobs:
  dependency_checker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get dependencies from apt-dependencies.json file
        id: get-dependencies
        run: |
          dependencies=$(cat config/apt-dependencies.json | jq -r 'keys_unsorted | .[]')
          echo "DEPENDENCIES=$dependencies" >> "$GITHUB_OUTPUT"
      - name: Check dependencies latest versions
        id: check-dependencies
        run: |
          IFS=' ' read -r -a deps <<< "${{ steps.get-dependencies.outputs.dependencies }}"
          echo "{" > new-deps.json

          for dep in "${deps[@]}"; do
            data=$(curl -s https://packages.ubuntu.com/noble/$dep)
            current_version=$(eval "cat config/apt-dependencies.json | jq -r '.\"${dep}\"'")
            latest_version=$(echo $data \
            | grep -o "<meta name=\"Keywords\".*" \
            | sed -e 's/<link.*//' \
            | grep -o "content=\".*\"" \
            | sed -e 's/content=\"\(.*\)\"/\1/' \
            | sed "s/\,//g; s/Ubuntu//g; s/noble//g; s/main//g; s/utils//g; s/us//g; s/ //g")

            if [[ "$latest_version" != "$current_version" ]]; then
              echo "\"$dep\": \"$latest_version\""
              echo "\"$dep\": \"$latest_version\"" >> new-deps.json
            fi

            echo "}" >> new-deps.json
          done
      - name: Merge dependencies files
        run: |
          jq -s '.[0] * .[1]' config/apt-dependencies.json new-deps.json > config/new-apt-dependencies.json
          mv config/new-apt-dependencies.json config/apt-dependencies.json
          rm new-deps.json
      # - uses: stefanzweifel/git-auto-commit-action@v5
      #   with:
      #     # Optional. Commit message for the created commit.
      #     # Defaults to "Apply automatic changes"
      #     commit_message: "[APT-DEPS-UPDATER] updates apt dependencies"
      
      #     # Optional. Local and remote branch name where commit is going to be pushed
      #     #  to. Defaults to the current branch.
      #     #  You might need to set `create_branch: true` if the branch does not exist.
      #     branch: bot/apt-update
      
      #     # Optional. Options used by `git-commit`.
      #     # See https://git-scm.com/docs/git-commit#_options
      #     commit_options: '--no-verify --signoff'
      
      #     # Optional commit user and author settings
      #     commit_author: Author <me@iolave.com> # defaults to "username <username@users.noreply.github.com>", where "username" belongs to the author of the commit that triggered the run
      
      #     # Optional. Option used by `git-status` to determine if the repository is 
      #     # dirty. See https://git-scm.com/docs/git-status#_options
      #     # status_options: '--untracked-files=no'
      
      #     # Optional. Options used by `git-add`.
      #     # See https://git-scm.com/docs/git-add#_options
      #     add_options: '-u'
      
      #     # Optional. Options used by `git-push`.
      #     # See https://git-scm.com/docs/git-push#_options
      #     push_options: '--force'
          
      #     # Optional. Disable dirty check and always try to create a commit and push
      #     # skip_dirty_check: true    
          
      #     # Optional. Skip internal call to `git fetch`
      #     #skip_fetch: true    
          
      #     # Optional. Skip internal call to `git checkout`
      #     #skip_checkout: true
      
      #     # Optional. Prevents the shell from expanding filenames. 
      #     # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
      #     #disable_globbing: true
      
      #     # Optional. Create given branch name in local and remote repository.
      #     create_branch: true
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update report
          signoff: false
          branch: bot/apt-update
          branch-suffix: random
          base: chore/clamav-daemon-updater-bot
          delete-branch: true
          title: '[PATCH] APT dependency update'
          body: |
            Update report
            - Updated with *today's* date
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            report
            automated pr
          assignees: iolave
          reviewers: iolave
          draft: false